name: PR Merge

on:
  push:
    branches:
      - master

env:
  CI: true
  CARGO_TERM_COLOR: always

permissions:
  contents: write

jobs:
  Publish:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [ 20.x ]
        os: [ ubuntu-latest ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node_version }}
          registry-url: 'https://registry.npmjs.org'

      - name: NPM install
        run: |
          npm install
          npm run build

      - name: NPM test
        run: |
          npm run test

      - name: Extract git branch
        run: |
          # Short name for current branch. For PRs, use target branch (base ref)
          GIT_BRANCH=${GITHUB_BASE_REF:-${GITHUB_REF#refs/heads/}}
          echo "GIT_BRANCH=$GIT_BRANCH" >> $GITHUB_ENV

      - name: NPM Release
        run: |
          echo "Current branch $GIT_BRANCH"

          git config user.name "GitHub Actions"
          git config user.email "github-actions@users.noreply.github.com"

          if [[ `git status --porcelain` ]]; then
            git add dist
            git commit -m "Build dist"
          fi

          npm version patch --json -m "Release %s

          [skip ci]
          "

          VERSION="$(cat package.json | jq -r '.version')"

          git push origin v$VERSION
          git push origin $GIT_BRANCH

          # this will prepare all details for next step
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          npm pack      

      - name: Create github release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "*.tgz"
          makeLatest: true
          name: "Release ${{ env.VERSION }}"
          tag: v${{ env.VERSION }}
